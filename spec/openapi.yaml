---
openapi: "3.0.0"
info:
  version: 1.0.0
  title: Eclipse Marketplace Client API v2
  license:
    name: Eclipse Public License - 2.0
    url: https://www.eclipse.org/legal/epl-2.0/
  
servers:
- url: http://marketplace.eclipse.org/api/v2
  description: Production endpoint for Eclipse Marketplace API
tags:
  - name: Listings
    description: Definitions for marketplace listings
  - name: Listing Versions
    description: Definitions for marketplace listing versions
  - name: Catalogs
    description: Marketplace catalog definitions
  - name: Categories
    description: Market categories
  - name: Error reports
    description: Listing error reports
  - name: Installs
    description: Access to listing install stats
  - name: Markets
    description: Information about available markets
paths:
  /listings:
    get:
      tags:
        - Listings
      operationId: get-listings
      summary: Listing list
      description: Returns a list of marketplace listings that match the given parameters, filtering out solutions that don't match the filters.
      parameters:
        - $ref: "#/components/parameters/platform_version"
        - $ref: "#/components/parameters/java_version"
        - $ref: "#/components/parameters/os"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
        - name: market_id
          in: query
          description: "The ID of the market to search in for listings"
          required: false
          schema:
            $ref: "#/components/schemas/ObjectID"
        - name: category_id
          in: query
          description: "The ID of the category to search in for listings"
          required: false
          schema:
            $ref: "#/components/schemas/ObjectID"
        - name: license_type
          in: query
          description: | 
            Optional query parameter to filter the results by license type.
            The result will be a union of all included license types. 
            Valid values include:
            
            * COMMERCIAL 
            * OPEN_SOURCE 
            * EPL
            * EPL 1.0  
            * EPL 2.0  
            * GPL  
          required: false
          schema:
            $ref: "#/components/schemas/license_type"
          style: form
          explode: true
        - name: sort
          in: query
          description: |
            Optional query parameter to sort the resulting listings. This sort will be performed based on the field name passed, in either ascending or descending order based on which of ASC or DESC was passed after the field name separated by a space. 
             
            At this time, only a subset of whitelisted values are enabled for sorting, and only one of which can be used for sorting at a time. See below for a list of accepted fields.
            
            - install_count
            - install_count_recent
            - favorite_count
            - id
            - name
            - created
            - changed
            
            This value should be in the format of `fieldname [ASC|DESC]`. For example, `installsrecent DESC`
          required: false
          schema:
            $ref: "#/components/schemas/sort_whitelist"
        - name: featured
          in: query
          description: If set to true, will randomize results based on a random seed and ignore sort clauses.
          schema: 
            type: boolean
        - name: q
          in: query
          description: Search term to use when narrowing down results.
          schema:
            type: string
        - name: ids
          in: query
          description: Comma-delimited list of listing IDs to retrieve for the call.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ObjectID"
          style: form
        - name: tags
          in: query
          description: Comma-delimited list of tag names to filter results for.
          schema:
            type: array
            items: 
              type: string
          style: form
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Listings"
        500:
          description: Error while retrieving data
    put:
      tags:
        - Listings
      operationId: put-listing
      summary: Listing update
      description: Using the passed listing object, updates, or in the case of new data inserts, are made in the data set to include the new information. User must be authorized to update items to access this endpoint.
      requestBody:
        description: The listing to be updated or inserted into the data set.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Listing"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Listing"
        201:
          description: Success (no content)
        500:
          description: Error while inserting data

  /listings/{listing_id}:
    parameters:
      - name: listing_id
        in: path
        description: Unique ID of an individual listing
        required: true
        schema:
          $ref: "#/components/schemas/ObjectID"
      - $ref: "#/components/parameters/platform_version"
      - $ref: "#/components/parameters/java_version"
      - $ref: "#/components/parameters/os"
    get:
      tags:
        - Listings
      operationId: get-listing
      summary: Listing
      description: Returns a single listing that has a matching listing ID, filtering out versions that do not match the passed parameters.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Listing"
        404:
          description: No listing found
        500:
          description: Error while retrieving data
    delete:
      tags:
        - Listings
      operationId: delete-listing
      summary: Delete listing
      description: Deletes a single listing that has a matching ID. User must be authorized to delete items to access this endpoint.
      responses:
        200:
          description: Success
        403:
          description: Unauthorized
          
  /listing_versions:
    get:
      tags:
        - Listing Versions
      operationId: get-listing-versions
      summary: Listing version list
      description: Retrieves a list of listing versions available within the marketplace.
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListingVersions"
        500:
          description: Error while retrieving data
    put:
      tags:
        - Listing Versions
      operationId: put-listing-version
      summary: Listing version update
      description: Add or update information about a listing version in the marketplace. User must be authorized to update items to access this endpoint.
      requestBody:
        description: The listing version to be updated or inserted into the data set.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListingVersion"
      responses:
        200:
          description: Success
        500:
          description: Error while inserting data

  /listing_versions/{version_id}:
    parameters:
      - name: version_id
        in: path
        description: Unique ID of an individual listing version
        required: true
        schema:
          $ref: "#/components/schemas/ObjectID"
    get:
      tags:
        - Listing Versions
      operationId: get-listing-version
      summary: Listing Version
      description: Retrieve a single listing version within the marketplace, matching on its ID.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListingVersion"
        500:
          description: Error while retrieving data
    delete:
      tags:
        - Listing Versions
      operationId: delete-listing-version
      summary: Delete Listing version
      description: Deletes a single listing version that has a matching ID. User must be authorized to delete items to access this endpoint.
      responses:
        200:
          description: Success
        403:
          description: Unauthorized
        404:
          description: No listing version found


  /installs/{listing_id}:
    parameters:
      - name: listing_id
        in: path
        description: Unique ID of an individual listing
        required: true
        schema:
          $ref: "#/components/schemas/ObjectID"
      - $ref: "#/components/parameters/platform_version"
      - $ref: "#/components/parameters/java_version"
      - $ref: "#/components/parameters/os"
      - $ref: "#/components/parameters/page"
      - $ref: "#/components/parameters/limit"
    get:
      tags:
        - Installs
      operationId: get-installs
      summary: Installation count by listing ID
      description: Retrieve count of installs for marketplace a listing by its unique ID. The parameters that are available for this call act as filters for the statistics, allowing for greater flexibility of analysis of the Installation stats.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Installs"
        404:
          description: No listing found
          
  /installs/{listing_id}/metrics:
    parameters:
      - name: listing_id
        in: path
        description: Unique ID of an individual listing
        required: true
        schema:
          $ref: "#/components/schemas/ObjectID"
    get:
      tags:
        - Installs
      operationId: get-install-metrics
      summary: Install metrics by listing ID
      description: Retrieve install metrics for a marketplace listing by listing ID.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Installs"
        404:
          description: No listing metrics found

  /installs/{listing_id}/{version_id}:
    parameters:
      - name: listing_id
        in: path
        description: Unique ID of an individual listing
        required: true
        schema:
          $ref: "#/components/schemas/ObjectID"
      - name: version_id
        in: path
        description: Unique ID for the version that is being updated
        required: true
        schema:
          $ref: "#/components/schemas/ObjectID"
    get:
      tags:
        - Installs
      parameters:
        - $ref: "#/components/parameters/platform_version"
        - $ref: "#/components/parameters/java_version"
        - $ref: "#/components/parameters/os"
        - $ref: "#/components/parameters/country"
      operationId: get-installs-for-version
      description: Retrieve number of installs for the given marketplace listing and version by its unique listing ID and version number. The parameters that are available for this call act as filters for the statistics, allowing for greater flexibility of analysis of the Installation stats.
      summary: Count of installs for given listing version install
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Installs"
        404:
          description: Invalid listing and version combination, no data found
    post:
      tags:
        - Installs
      operationId: post-install
      summary: Create Installation
      description: Add information about an install. (Only accessible via the marketplace client)
      responses:
        200:
          description: Success
        403:
          description: Forbidden
        404:
          description: Invalid listing and version combination, no data found

  /catalogs:
    get:
      tags:
        - Catalogs
      operationId: get-catalogs
      summary: Catalog list
      description: Retrieves information about the catalogs available in the marketplace.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Catalogs"
        500:
          description: Error while retrieving data
    put:
      tags:
        - Catalogs
      operationId: put-catalog
      summary: Catalog update
      description: Add or update information about a catalog in the marketplace. User must be authorized to update items to access this endpoint.
      requestBody:
        description: The catalog to be updated or inserted into the data set.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Catalog"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Catalog"
        201:
          description: Success (no content)
        500:
          description: Error while inserting data

  /catalogs/{catalogId}:
    parameters:
      - name: catalogId
        in: path
        description: Unique ID of an individual catalog
        required: true
        schema:
          $ref: "#/components/schemas/ObjectID"
    get:
      tags:
        - Catalogs
      operationId: get-catalog
      summary: Catalog
      description: Retrieve information on a single catalog, matching on the catalog ID.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Catalog"
        404:
          description: No catalog found
        500:
          description: Error while retrieving data
    delete:
      tags:
        - Catalogs
      operationId: delete-catalog
      summary: Delete catalog
      description: Deletes a single listing that has a matching ID. User must be authorized to delete items to access this endpoint.
      responses:
        200:
          description: Success
        403:
          description: Unauthorized
        404:
          description: No catalog found

  /markets:
    get:
      tags:
        - Markets
      operationId: get-markets
      summary: Market list
      description: Retrieves a listing of markets available within the marketplace.
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Markets"
        500:
          description: Error while retrieving data
    put:
      tags:
        - Markets
      operationId: put-market
      summary: Market update
      description: Add or update information about a market in the marketplace. User must be authorized to update items to access this endpoint.
      requestBody:
        description: The market to be updated or inserted into the data set.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Market"
      responses:
        200:
          description: Success
        500:
          description: Error while inserting data

  /markets/{market_id}:
    parameters:
      - name: market_id
        in: path
        description: Unique ID of an individual market
        required: true
        schema:
          $ref: "#/components/schemas/ObjectID"
    get:
      tags:
        - Markets
      operationId: get-market
      summary: Market
      description: Retrieve a single market within the marketplace, matching on its ID.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Market"
        500:
          description: Error while retrieving data
    delete:
      tags:
        - Markets
      operationId: delete-market
      summary: Delete Market
      description: Deletes a single market that has a matching ID. User must be authorized to delete items to access this endpoint.
      responses:
        200:
          description: Success
        403:
          description: Unauthorized
        404:
          description: No market found

  /categories:
    get:
      tags:
        - Categories
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      operationId: get-categories
      summary: Category list
      description: Retrieves a listing of categories available within the marketplace.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Categories"
        500:
          description: Error while retrieving data
    put:
      tags:
        - Categories
      operationId: put-category
      summary: Category update
      description: Add or update information about a category in the marketplace. User must be authorized to update items to access this endpoint.
      requestBody:
        description: The market to be updated or inserted into the data set.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        201:
          description: Success (no content)
        500:
          description: Error while inserting data
          
  /categories/{categoryID}:
    parameters:
      - name: categoryID
        in: path
        description: Unique ID of an individual category
        required: true
        schema:
          $ref: "#/components/schemas/ObjectID"
    get:
      tags:
        - Categories
      operationId: get-category
      summary: Category
      description: Retrieves a category available within the marketplace, matched on its ID.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        404:
          description: Not found
        500:
          description: Error while retrieving data
    delete:
      tags:
        - Categories
      operationId: delete-category
      summary: Delete category
      description: Deletes a single category that has a matching ID. User must be authorized to delete items to access this endpoint.
      responses:
        200:
          description: Success
        403:
          description: Unauthorized
        404:
          description: No category found
          
  /error_report:
    get:
      tags:
        - Error reports
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      operationId: get-error-reports
      summary: Error reports list
      description: Retrieves a list of error reports available within the marketplace.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorReports"
        500:
          description: Error while retrieving data
    put:
      tags:
        - Error reports
      operationId: put-error-report
      summary: Error reports update
      description: Add or update information about a error report in the marketplace. User must be authorized to update items to access this endpoint.
      requestBody:
        description: The error report to be updated or inserted into the data set.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorReport"
      responses:
        200:
          description: Success
        201:
          description: Success (no content)
        403:
          description: Not authorized
        500:
          description: Error while inserting data
          
  /error_report/{errorReportID}:
    parameters:
      - name: errorReportID
        in: path
        description: Unique ID of an individual error report
        required: true
        schema:
          $ref: "#/components/schemas/ObjectID"
    get:
      tags:
        - Error reports
      operationId: get-error-report
      summary: Error report
      description: Retrieves an error report available within the marketplace, matched on its ID.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorReport"
        404:
          description: Not found
        500:
          description: Error while retrieving data
    delete:
      tags:
        - Error reports
      operationId: delete-error-report
      summary: Delete error report
      description: Deletes a single error report that has a matching ID. User must be authorized to delete items to access this endpoint.
      responses:
        200:
          description: Success
        403:
          description: Unauthorized
        404:
          description: No error report found
        500:
          description: Error while removing error report

components:
  parameters:
    product:
      name: product
      in: query
      description: The product id of the target Eclipse, e.g. org.eclipse.sdk.ide or epp.package.java
      required: false
      schema:
        type: string
    platform_version:
      name: platform_version
      in: query
      description: The version of the running product of the target Eclipse, identical to the version of the product's branding plugin
      required: false
      schema:
        $ref: "#/components/schemas/osgiVersion"
    java_version:
      name: java_version
      in: query
      description: The version of the JRE running the target Eclipse, as returned by the JRE's `System.getProperty("java.version")`
      required: false
      schema:
        type: string
    os:
      name: os
      in: query
      description: |
        Operating system of the user.

        Supported values include: 
        
        * linux  
        * win32  
        * macosx
      required: false
      schema:
        type: string
    country:
      name: country
      in: query
      description: The users country of origin.
      required: false
      schema:
        type: string
    page:
      name: page
      in: query
      description: The current page in pagination for results
      required: false
      schema:
        type: integer
    limit:
      name: limit
      in: query
      description: 'The size of result sets returned (maximum: 50, default: 10)'
      required: false
      schema:
        type: integer

  schemas:
    Listing:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ObjectID"
        title:
          type: string
          description: Listing Title
        categories:
          type: array
          items: 
            $ref: "#/components/schemas/Category"
          description: Array of categories in which this listing appears. This field does not impact categories present in a listing when posting, and is only a reflection of categories set in the 'category_ids' field.
        market_ids:
          type: array
          description: List of IDs of markets this listing should be listed in 
          items:
            $ref: "#/components/schemas/ObjectID"
        category_ids:
          type: array
          description: List of IDs of categories this listing should be listed in 
          items:
            $ref: "#/components/schemas/ObjectID"
        tags:
          type: array
          items: 
            $ref: "#/components/schemas/Tag"
          description: Array of tags that this listing appears.
        authors:
          description: Individuals involved with the development of the listing
          type: array
          items:
            $ref: "#/components/schemas/Account"
        favorite_count:
          type: integer
          description: Number of times a listing was add to a favorite list.
        install_count:
          type: integer
          description: Install count
        install_count_recent:
          type: integer
          description: Install count for the last month
        install_ranking:
          type: string
          description: Relative install_ranking of the given listing.
        teaser:
          type: string
          description: Listing teaser
        body:
          type: string
          description: Full description
        created:
          type: integer
          description: Timestamp
        changed:
          type: integer
          description: Timestamp
        foundation_member:
          type: boolean
          description: TRUE/FALSE
        homepage_url:
          type: string
          description: Listing URL website
        logo:
          type: string
          description: Logo absolute URL
        license_type:
          type: string
          description: Listing license
        organization:
          $ref: "#/components/schemas/Organization"
          description: Organizations involved with the development of the listing
        status:
          type: string
          description: Release status
        support_url:
          type: string
          description: Support/documentation URL
        screenshots:
          type: array
          description: List of screenshot URLs showcasing the listing
          items:
            type: string
        versions:
          $ref: "#/components/schemas/ListingVersions"

    Listings:
      type: array
      items: 
        $ref: "#/components/schemas/Listing"

    Account:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ObjectID"
        full_name:
          type: string
          description: Name of the author
        username:
          type: string
          description: Eclipse Foundation username for the account

    Organization:
      type: object
      properties:
        name:
          type: string
          description: Organization name
        id:
          $ref: "#/components/schemas/ObjectID"
          description: Organizational member ID

    Tag:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ObjectID"
        title:
          type: string
          description: Tag Title
        url:
          type: string
          description: URL to retrieve the tag details.

    Categories:
      type: array
      items: 
        $ref: "#/components/schemas/Category"
        
    Category:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ObjectID"
        title:
          type: string
          description: Category title
        url:
          type: string
          description: URL to retrieve the category details.

    Market:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ObjectID"
        title:
          type: string
          description: Listing Title
        url:
          type: string
          description: URL to retrieve the market details.
        categories:
          type: array
          items: 
            $ref: "#/components/schemas/Categories"
          description: Array of categories that are used for the current market
        listing_ids:
          type: array
          items: 
            $ref: "#/components/schemas/ObjectID"
          description: Array of listing IDs that should be used for the current market

    Markets:
      type: array
      items:
        $ref: "#/components/schemas/Market"
        
    ObjectID:
      description: Unique identifier for an addressable object in the API.
      type: string
      minimum: 1           

    Catalogs:
      type: array
      items:
        $ref: "#/components/schemas/Catalog"

    Catalog:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ObjectID"
        title:
          type: string
          description: title of catalog
        url:
          type: string
          description: Url prefix of the marketplace catalog
        self_contained:
          type: boolean
          description: TRUE/FALSE
        search_enabled:
          type: boolean
          description: TRUE/FALSE
        icon:
          type: string
          description: Absolute url
        description:
          type: string
          description: Short description
        dependencies_repository:
          type: string
        tabs:
          type: array
          description: List of tabs to be included within a catalog
          items:
            $ref: "#/components/schemas/CatalogTab"

    CatalogTab:
      type: object
      properties:
        title:
          type: string
          description: Name of the tab to display
        url:
          type: string
          description: URL for default content of the tab
        type:
          type: string
          description: Type of tab, can either be a default tab, a search tab, or an embedded content tab
          enum:
            - default
            - search
            - embedded

    license_type:
      type: string
      enum:
        - COMMERCIAL # Includes all commercial license types
        - OPEN_SOURCE # Includes all open source license types
        - EPL # Includes all versions of EPL
        - EPL 1.0
        - EPL 2.0
        - GPL

    sort_whitelist:
      type: string
      enum:
        - install_count
        - install_count_recent
        - favorite_count
        - id
        - name
        - created
        - changed

    osgiVersion:
      type: number
      format: float
      description: Describes the version of OSGi the given platform is using
    
    ListingVersions:
      type: array
      items:
        $ref: "#/components/schemas/ListingVersion"
    
    ListingVersion:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ObjectID"
        listing_id:
          description: The listing ID this listing version represents
          $ref: "#/components/schemas/ObjectID"
        version:
          type: string
          description: Version name string
        update_site_url:
          type: string
          description: Update site URL
        eclipse_versions:
          type: array
          description: Eclipse release number (4.5, 4.4...)
          items:
            type: string
        platforms:
          type: array
          description: Compatible OS (Windows, Mac, Linux/GTK)
          items:
            type: string
        min_java_version:
          type: string
          description: The minimum Java version required to run the given solution. This should be solely the release number (e.g. "7" for Java 7).
        feature_ids:
          $ref: "#/components/schemas/FeatureIDs"

    Install:
      type: object
      description: Install record for a listing install that tracks environment information as well as which listing and version was installed.
      properties:
        id:
          $ref: "#/components/schemas/ObjectID"
        installDate:
          description: Install date for the current record in RFC 3339 format. Example, `1990-12-31T15:59:60-08:00`.
          type: string
          format: datetime
        os:
          type: string
          description: The OS detected for the record
        version:
          $ref: "#/components/schemas/ObjectID"
          description: ID of the Listing version that was installed
        listing_id:
          $ref: "#/components/schemas/ObjectID"
          description: ID of the Listing that was installed
        java_version:
          type: string
          description: Detected Java version for this record
        eclipse_version:
          type: string
          description: Eclipse release number (4.5, 4.4...)
        locale:
          type: string
          description: Configured locale of the workspace for the install record

    ErrorReports:
      type: array
      items:
        $ref: "#/components/schemas/ErrorReport"

    ErrorReport:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ObjectID"
        listing_id:
          $ref: "#/components/schemas/ObjectID"
        title:
          type: string
          description: Title of the error report
        body:
          type: string
          description: Information about the error.
        status:
          type: string
          description: Status code associated with the error
        status_message:
          type: string
          description: Message from the system concerning the error
        detailed_message:
          type: string
          description: Message concerning how the error occurred from the user.
        read:
          type: boolean
          description: Whether the error report has been read/acknowledged by a listing administrator/author. 
        feature_ids:
          $ref: "#/components/schemas/FeatureIDs"
          
    FeatureIDs:
      type: array
      description: Describes additional feature packages available for install with the current version
      items:
        $ref: "#/components/schemas/FeatureID"

    FeatureID:
      type: object
      description: Describes an additional feature package available for install with the current version
      properties:
        feature_id:
          type: string
          description: The ID of the feature for the solution
        install_state:
          type: string
          description: Whether the feature is required, optional, or recommended.
          enum:
            - optional
            - required
            - optional_selected    
    
    Installs:
      type: object
      properties:
        periods:
          type: array
          minItems: 11
          items:
            $ref: "#/components/schemas/InstallStat"
        total:
          type: number
          description: The number of historic installs for the given resource

    InstallStat:
      type: object
      properties:
        start:
          type: string
          format: datetime
          description: |
            Start date for the range of counted installs in RFC 3339 format. Example, `1990-12-31T15:59:60-08:00`.
            
            More on this standard can be read at https://tools.ietf.org/html/rfc3339.
        end: 
          type: string
          format: datetime
          description: End date for the range of counted installs
        count:
          description: |
            Number of installs in the given period for the given version in RFC 3339 format. Example, `1990-12-31T15:59:60-08:00`.
            
            More on this standard can be read at https://tools.ietf.org/html/rfc3339.
          type: integer
          format: int32
          minimum: 0 
